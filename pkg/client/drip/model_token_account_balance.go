/*
Drip Backend

Drip backend service. All API's have a IP rate limit of 10 requests per second. 

API version: 1.0.0
Contact: mocha@dcaf.so
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package drip

import (
	"encoding/json"
)

// TokenAccountBalance struct for TokenAccountBalance
type TokenAccountBalance struct {
	Pubkey string `json:"pubkey"`
	Mint string `json:"mint"`
	Owner string `json:"owner"`
	Amount string `json:"amount"`
	State string `json:"state"`
}

// NewTokenAccountBalance instantiates a new TokenAccountBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenAccountBalance(pubkey string, mint string, owner string, amount string, state string) *TokenAccountBalance {
	this := TokenAccountBalance{}
	this.Pubkey = pubkey
	this.Mint = mint
	this.Owner = owner
	this.Amount = amount
	this.State = state
	return &this
}

// NewTokenAccountBalanceWithDefaults instantiates a new TokenAccountBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenAccountBalanceWithDefaults() *TokenAccountBalance {
	this := TokenAccountBalance{}
	return &this
}

// GetPubkey returns the Pubkey field value
func (o *TokenAccountBalance) GetPubkey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pubkey
}

// GetPubkeyOk returns a tuple with the Pubkey field value
// and a boolean to check if the value has been set.
func (o *TokenAccountBalance) GetPubkeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pubkey, true
}

// SetPubkey sets field value
func (o *TokenAccountBalance) SetPubkey(v string) {
	o.Pubkey = v
}

// GetMint returns the Mint field value
func (o *TokenAccountBalance) GetMint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mint
}

// GetMintOk returns a tuple with the Mint field value
// and a boolean to check if the value has been set.
func (o *TokenAccountBalance) GetMintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mint, true
}

// SetMint sets field value
func (o *TokenAccountBalance) SetMint(v string) {
	o.Mint = v
}

// GetOwner returns the Owner field value
func (o *TokenAccountBalance) GetOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *TokenAccountBalance) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *TokenAccountBalance) SetOwner(v string) {
	o.Owner = v
}

// GetAmount returns the Amount field value
func (o *TokenAccountBalance) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TokenAccountBalance) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TokenAccountBalance) SetAmount(v string) {
	o.Amount = v
}

// GetState returns the State field value
func (o *TokenAccountBalance) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *TokenAccountBalance) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *TokenAccountBalance) SetState(v string) {
	o.State = v
}

func (o TokenAccountBalance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pubkey"] = o.Pubkey
	}
	if true {
		toSerialize["mint"] = o.Mint
	}
	if true {
		toSerialize["owner"] = o.Owner
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableTokenAccountBalance struct {
	value *TokenAccountBalance
	isSet bool
}

func (v NullableTokenAccountBalance) Get() *TokenAccountBalance {
	return v.value
}

func (v *NullableTokenAccountBalance) Set(val *TokenAccountBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenAccountBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenAccountBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenAccountBalance(val *TokenAccountBalance) *NullableTokenAccountBalance {
	return &NullableTokenAccountBalance{value: val, isSet: true}
}

func (v NullableTokenAccountBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenAccountBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


